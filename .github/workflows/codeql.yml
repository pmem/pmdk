# Run the CodeQL scanner for finding vulnerabilities in the code (both C and Python).
#
# This workflow does not use docker containers.
name: CodeQL

on: [push, pull_request]

env:
  GITHUB_REPO:  pmem/pmdk
  HOST_WORKDIR: /home/runner/work/pmdk/pmdk
  WORKDIR:      utils/gha-runners
  PMDK_CC:      gcc
  PMDK_CXX:     g++
  
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'python' ]

    steps:
    - name: Clone the git repo
      uses: actions/checkout@v3

    - name: Install required packages
      run: |
        export VALGRIND_DEPS="autoconf \
          automake"

        export BASE_DEPS="build-essential \
          cmake \
          git \
          libdaxctl-dev \
          libndctl-dev \
          pandoc \
          pkg-config"

        sudo apt-get update \
        && sudo apt-get install -y --no-install-recommends \
          ${VALGRIND_DEPS} \
          ${BASE_DEPS} \
        && sudo ./utils/docker/images/install-valgrind.sh

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Run the build
      run: cd ${WORKDIR} && ./build-pmdk.sh
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
