# Run less frequently used OSes and checks.
name: Nightly

on:
  workflow_dispatch:
  schedule:
    # run this job at 00:00 UTC every other day
    - cron:  '0 0 */2 * *'
  push:
    tags:
      - '*'

env:
  GITHUB_REPO:    pmem/pmdk
  DOCKER_REPO:    ghcr.io/pmem/pmdk
  # use org's Private Access Token to log in to GitHub Container Registry
  GH_CR_USER:     ${{ secrets.GH_CR_USER }}
  GH_CR_PAT:      ${{ secrets.GH_CR_PAT }}
  HOST_WORKDIR:   /home/runner/work/pmdk/pmdk
  WORKDIR:        utils/docker
  PMDK_CC:        gcc
  PMDK_CXX:       g++
  MAKE_PKG:       0
  VALGRIND:       1
  SRC_CHECKERS:   0

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CONFIG: [
                 "OS=ubuntu OS_VER=22.04 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 NDCTL_ENABLE=n",
                 "OS=ubuntu OS_VER=22.04 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 NDCTL_ENABLE=n PMDK_CC=clang PMDK_CXX=clang++",
                 "OS=debian OS_VER=11 FAULT_INJECTION=1 TEST_BUILD=debug",
                 "OS=debian OS_VER=11 FAULT_INJECTION=1 TEST_BUILD=nondebug PUSH_IMAGE=1",
                 "OS=opensuse-leap OS_VER=15 FAULT_INJECTION=1 TEST_BUILD=debug",
                 "OS=opensuse-leap OS_VER=15 FAULT_INJECTION=1 TEST_BUILD=nondebug",
                 "OS=opensuse-leap OS_VER=15 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 PUSH_IMAGE=1",
                 "OS=rockylinux OS_VER=8 TEST_BUILD=debug",
                 "OS=rockylinux OS_VER=8 TEST_BUILD=nondebug",
                 "OS=rockylinux OS_VER=8 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 PUSH_IMAGE=1",
                 "OS=rockylinux OS_VER=9 TEST_BUILD=debug",
                 "OS=rockylinux OS_VER=9 TEST_BUILD=nondebug",
                 "OS=rockylinux OS_VER=9 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 PUSH_IMAGE=1",
                 "OS=fedora OS_VER=37 PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=debug PUSH_IMAGE=1",
                 "OS=fedora OS_VER=37 PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=nondebug",
                ]
    steps:
      - name: Clone the git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Get system information
        run: ./$WORKDIR/get-system-info.sh

      - name: Pull or rebuild the image
        run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh rebuild

      - name: Run the build
        run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build-CI.sh
