# Run default OSes for each PR, push event or a new tag,
# checks basic builds with various compilers and executes all sets of tests.
name: PMDK

on: [push, pull_request]

env:
  GITHUB_REPO: pmem/pmdk
  DOCKER_REPO: ghcr.io/pmem/pmdk

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    env:
      # use org's Private Access Token to log in to GitHub Container Registry
      GH_CR_USER:  ${{ secrets.GH_CR_USER }}
      GH_CR_PAT:   ${{ secrets.GH_CR_PAT }}
      DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
      HOST_WORKDIR: /home/runner/work/pmdk/pmdk
      WORKDIR:      utils/docker
      PMDK_CC:      gcc
      PMDK_CXX:     g++
      MAKE_PKG:     0
      VALGRIND:     1
      SRC_CHECKERS: 0
    strategy:
      matrix:
        CONFIG: ["N=1 OS=ubuntu OS_VER=22.04 FAULT_INJECTION=1 TEST_BUILD=debug",
                 "N=2 OS=ubuntu OS_VER=22.04 FAULT_INJECTION=1 TEST_BUILD=nondebug UBSAN=1",
                 "N=3 OS=ubuntu OS_VER=22.04 PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=debug SRC_CHECKERS=1",
                 "N=4 OS=ubuntu OS_VER=22.04 PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=nondebug",
                 "N=5 OS=fedora OS_VER=37    PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=debug",
                 "N=6 OS=fedora OS_VER=37    PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=nondebug AUTO_DOC_UPDATE=1",
                 "N=7 OS=fedora OS_VER=37    MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 PUSH_IMAGE=1",
                 "N=8 OS=ubuntu OS_VER=22.04 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 NDCTL_ENABLE=n PUSH_IMAGE=1",
                 "N=9 OS=ubuntu OS_VER=22.04 MAKE_PKG=1 EXPERIMENTAL=y VALGRIND=0 NDCTL_ENABLE=n PMDK_CC=clang PMDK_CXX=clang++",
                 "N=10 OS=ubuntu OS_VER=22.04 COVERAGE=1 FAULT_INJECTION=1 TEST_BUILD=debug"
                ]
    steps:
      - name: Clone the git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Pull or rebuild the image
        run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

      - name: Run the build
        run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build-CI.sh
