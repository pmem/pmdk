
name: pmdk_unittest_linux

on:
    workflow_dispatch:
        inputs:
            label:
                description: 'label of execution machine, for example dell004 or fedora34, remember to manually add labels on gha runners page.'
                required: true
                default: 'dell004'
            test_folders:
                description: 'please select one: all, remotes, nonremotes'
                required: true
                default: 'all'
            test_type:
                description: 'please select one: check, short, medium, long, all'
                required: true
                default: 'check'
            test_build:
                description: 'please select one: debug, nondebug, static-debug, static-nondebug, all'
                required: true
                default: 'all'
            fs_type:
                description: 'please select one: all, pmem, non-pmem, any, none'
                required: true
                default: 'all'
            badblock:
                description: 'please select one: yes, no'
                required: true
                default: 'no'
            drd:
                description: 'please select one: auto, force-enable'
                required: true
                default: 'auto'
            memcheck:
                description: 'please select one: auto, force-enable'
                required: true
                default: 'auto'
            helgrind:
                description: 'please select one: auto, force-enable'
                required: true
                default: 'auto'
            dual_exec:
                description: 'please select one: nope, dbg_st-nondbg_vs_nondbg-st-dbg'
                required: true
                default: 'nope'
        
env:
    GITHUB_REPO: pmem/pmdk
    DOCKER_REPO: ghcr.io/pmem/pmdk
    EMAIL_RECIPIENTS: 'gk.pmdk.gb.val@intel.com'

jobs:
  linux:
    name: Linux
    runs-on: [self-hosted, linux, x64, '${{ github.event.inputs.label }}' ]
    env:
      # use org's Private Access Token to log in to GitHub Container Registry
      GH_CR_USER:  ${{ secrets.GH_CR_USER }}
      SCRIPT_DIR:   /home/runner/work/pmdk/pmdk/utils/gha-runners
      HOST_WORKDIR:   /home/runner/work/pmdk/pmdk
 
   
    steps:
    
        - name: Print configaration data
          run: |
            echo "label: ${{ github.event.inputs.label }}" 
            echo "test_folders: ${{ github.event.inputs.test_folders }}"
            echo "test_type: ${{ github.event.inputs.test_type }}" 
            echo "test_build: ${{ github.event.inputs.test_build }}"
            echo "fs_type: ${{ github.event.inputs.fs_type }}" 
            echo "badblock: ${{ github.event.inputs.badblock }}"
            echo "drd: ${{ github.event.inputs.drd }}" 
            echo "memcheck: ${{ github.event.inputs.memcheck }}"
            echo "helgrind: ${{ github.event.inputs.helgrind }}" 
            echo "dual_exec: ${{ github.event.inputs.dual_exec }}"
            echo "email_recipients: ${{ env.EMAIL_RECIPIENTS }}"
            
        - name: Clone the git repo
          uses: actions/checkout@v2
          
        - name: Prepare namespaces
          run: |
            dos2unix u+x utils/gha-runners/createNamespaceConfig.sh
            dos2unix u+x utils/gha-runners/removeNamespace.sh
            chmod utils/gha-runners/createNamespaceConfig.sh
            chmod utils/gha-runners/removeNamespace.sh
            cd utils/gha-runners && ./createNamespaceConfig.sh -u
        
        # - name: build pmdk
        #   run: ${SCRIPT_DIR}/docker/build_pmdk --pmdk-path=${HOST_WORKDIR}"
          
        # - name: build pmdk
        #   uses: actions/checkout@v2
          
        # - name: Configure tests
        #   run: ${SCRIPT_DIR}/docker/configure-tests.sh
          
        # - name: run tests
        #   run:  ${SCRIPT_DIR}/pmdk/utils/docker/run-coverage.sh
          
