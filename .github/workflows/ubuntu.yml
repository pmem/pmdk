# Validate on Ubuntu.
name: Ubuntu

on:
  workflow_dispatch:
  workflow_call:

env:
  GITHUB_REPO: pmem/pmdk
  DOCKER_REPO: ghcr.io/pmem/pmdk

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    env:
      HOST_WORKDIR:    /home/runner/work/pmdk/pmdk
      WORKDIR:         utils/docker
      PMDK_CC:         gcc
      PMDK_CXX:        g++
      MAKE_PKG:        0
      SRC_CHECKERS:    0
      OS:              ubuntu
      OS_VER:          22.04
      FAULT_INJECTION: 1
    strategy:
      # Introduced to stop sporadically failing Codecov uploader (COVERAGE=1)
      # from stopping all other builds.
      fail-fast: false
      matrix:
        include:
          # Note: All coverage scans should be run in the same environment.
          # Please see the coverage scan workflow for the reference environment.
          - {TEST_BUILD: debug, COVERAGE: 1}
          - {TEST_BUILD: nondebug, COVERAGE: 0}
    steps:
      - name: Clone the git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Get system information
        run: ./$WORKDIR/get-system-info.sh

      - name: Pull the image
        run: cd $WORKDIR && ./pull-or-rebuild-image.sh

      - name: Run the build
        env:
          TEST_BUILD: ${{ matrix.TEST_BUILD }}
          # Pushes to branches on developer forks (please see the caller workflow)
          # won't measure coverage. Coverage is meant to be measured only for
          # pull requests.
          # Note: Pull requests to forks will measure coverage as well.
          # Note: github.event_name for a workflow which has been called by
          # another workflow contains the triggering event of the caller workflow.
          COVERAGE: ${{ github.event_name == 'pull_request' && matrix.COVERAGE || 0 }}
        run: cd $WORKDIR && ./build-CI.sh
