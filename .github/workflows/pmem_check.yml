# Run short and medium tests (as defined in test frameworks), equivalent to 'make check'.
#
# This workflow is run on 'self-hosted' runners.
name: PMEM check

on: 
  workflow_dispatch:
  workflow_call:

env:
  WORKDIR: utils/gha-runners

jobs:
  linux:
    name: PMEM_check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [[self-hosted, rhel],[self-hosted, opensuse]]
        build: ['debug', 'nondebug', 'static_debug', 'static_nondebug']

    steps:
      - name: Clone the git repo
        uses: actions/checkout@v3
        with:
          repository: pmem/pmdk

      - name: Get system information
        run: ./$WORKDIR/get-system-info.sh

      - name: Build
        run: ./$WORKDIR/build-pmdk.sh

      - name: Create testconfig files
        run: ./$WORKDIR/../create-testconfig.sh

      - name: Run tests (Bash)
        run: cd src/test/ && ./RUNTESTS.sh -b ${{ matrix.build }}

      - name: Run tests (Python)
        run: cd src/test/ && ./RUNTESTS.py -b ${{ matrix.build }}


  fault_injection:
    name: PMEM fault injection
    runs-on: [self-hosted, rhel]
    strategy:
      fail-fast: false
      matrix:
        build: ['debug', 'nondebug']
    env:
      TEST_LABEL: fault_injection
      TEST_BUILD: ${{ matrix.build }}

    steps:
      - name: Clone the git repo
        uses: actions/checkout@v3
        with:
          repository: pmem/pmdk

      - name: Get system information
        run: ./$WORKDIR/get-system-info.sh

      - name: Build
        env:
          FAULT_INJECTION: 1
        run: ./$WORKDIR/build-pmdk.sh

      - name: Create testconfig files
        run: ./$WORKDIR/../create-testconfig.sh

      - name: Run tests (Bash)
        # TEST_BUILD and TEST_LABEL are taken directly from the environment
        run: cd src/test/ && ./RUNTESTS.sh

      - name: Run tests (Python)
        run: cd src/test/ && ./RUNTESTS.py -b $TEST_BUILD --test-label $TEST_LABEL
