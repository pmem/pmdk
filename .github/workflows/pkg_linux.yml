name: PKG_linux

on: [push, pull_request]

jobs:
  linux:
    name: PKG_Linux
    if: github.repository == 'tszczyp/pmdk'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        CONFIG: ["OS=ubuntu OS_VER=22.04",
                 "OS=opensuse-leap OS_VER=15",
                 "OS=rockylinux OS_VER=9"
                ]
#        os: [[self-hosted, rhel],[self-hosted, opensuse_test]]
    env:
      GHA_WORKDIR:    utils/gha-runners
      GITHUB_REPO:    pmem/pmdk
      DOCKER_REPO:    ghcr.io/pmem/pmdk
      # use org's Private Access Token to log in to GitHub Container Registry
      GH_CR_USER:     ${{ secrets.GH_CR_USER }}
      GH_CR_PAT:      ${{ secrets.GH_CR_PAT }}
      HOST_WORKDIR:   /home/runner/work/pmdk/pmdk
      WORKDIR:        utils/docker
      PMDK_CC:        gcc
      PMDK_CXX:       g++
      MAKE_PKG:       0
      VALGRIND:       1
      SRC_CHECKERS:   0
      CHECK_PKGS:     1

    steps:

        - name: Clone the git repo
          uses: actions/checkout@v2

        - name: Pull or rebuild the image
          run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

        - name: Run the pkg build
          run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build-CI.sh

 #       - name: Get system information
 #         run: |
 #           ./$WORKDIR/get-system-info.sh

        # Testing how everything works after moving to docker containers.
        - name: Create testconfig files
          run: |
            ${{ matrix.CONFIG }} ./$GHA_WORKDIR/create-testconfig.sh PKG

        - name: Show testconfig files
          run: |
            cat src/test/testconfig.sh

 #       - name: Make package
 #         run: |
 #           ./$WORKDIR/build-pmdk-package.sh

 #      - name: Build
 #         run: |
 #           ./$WORKDIR/build-pmdk.sh

 #       - name: Test built packages
 #         run: |
 #           python3 $WORKDIR/scripts/test-build-packages.py -r $(pwd) --without-rpmem

 #       - name: Install packages
 #         run: |
 #           sudo python3 $WORKDIR/scripts/install-packages.py -r $(pwd)

 #       - name: Test installed packages
 #         run: |
 #           python3 $WORKDIR/scripts/test-packages-installation.py -r $(pwd)

 #       - name: Build unittests
 #         run: |
 #           cd src/test && make clobber
 #           make test

 #       - name: Run check unittests
 #         run: |
 #           cd src/test && ./RUNTESTS -t check -o 60m

        # This step will run regardless of the results of the previous steps.
 #       - name: Cleanup
 #         if: always()
 #         run: |
 #           sudo python3 $WORKDIR/scripts/cleanup-packages.py -r $(pwd)
