{
    "filter": "libpmemobj",
    "api": [
        "libpmemobj_init",
        "pmem_init",
        "pmemobj_alloc_usable_size",
        "pmemobj_alloc",
        "pmemobj_cancel",
        "pmemobj_check_version",
        "pmemobj_check",
        "pmemobj_close",
        "pmemobj_cond_broadcast",
        "pmemobj_cond_signal",
        "pmemobj_cond_wait",
        "pmemobj_cond_zero",
        "pmemobj_create",
        "pmemobj_ctl_exec",
        "pmemobj_ctl_get",
        "pmemobj_ctl_set",
        "pmemobj_defer_free",
        "pmemobj_defrag",
        "pmemobj_direct",
        "pmemobj_drain",
        "pmemobj_errormsg",
        "pmemobj_first",
        "pmemobj_flush",
        "pmemobj_free",
        "pmemobj_get_user_data",
        "pmemobj_list_insert",
        "pmemobj_list_move",
        "pmemobj_list_remove",
        "pmemobj_memcpy_persist",
        "pmemobj_memcpy",
        "pmemobj_memmove",
        "pmemobj_memset_persist",
        "pmemobj_memset",
        "pmemobj_mutex_timedlock",
        "pmemobj_mutex_trylock",
        "pmemobj_mutex_zero",
        "pmemobj_next",
        "pmemobj_oid",
        "pmemobj_open",
        "pmemobj_persist",
        "pmemobj_publish",
        "pmemobj_realloc",
        "pmemobj_reserve",
        "pmemobj_root_size",
        "pmemobj_root",
        "pmemobj_rwlock_rdlock",
        "pmemobj_rwlock_timedrdlock",
        "pmemobj_rwlock_timedwrlock",
        "pmemobj_rwlock_tryrdlock",
        "pmemobj_rwlock_trywrlock",
        "pmemobj_rwlock_zero",
        "pmemobj_set_funcs",
        "pmemobj_set_user_data",
        "pmemobj_set_value",
        "pmemobj_strdup",
        "pmemobj_tx_abort",
        "pmemobj_tx_add_range_direct",
        "pmemobj_tx_add_range",
        "pmemobj_tx_begin",
        "pmemobj_tx_commit",
        "pmemobj_tx_end",
        "pmemobj_tx_errno",
        "pmemobj_tx_free",
        "pmemobj_tx_get_failure_behavior",
        "pmemobj_tx_get_user_data",
        "pmemobj_tx_lock",
        "pmemobj_tx_log_append_buffer",
        "pmemobj_tx_log_auto_alloc",
        "pmemobj_tx_log_intents_max_size",
        "pmemobj_tx_log_snapshots_max_size",
        "pmemobj_tx_process",
        "pmemobj_tx_publish",
        "pmemobj_tx_realloc",
        "pmemobj_tx_set_failure_behavior",
        "pmemobj_tx_set_user_data",
        "pmemobj_tx_stage",
        "pmemobj_tx_strdup",
        "pmemobj_tx_wcsdup",
        "pmemobj_tx_xadd_range_direct",
        "pmemobj_tx_xadd_range",
        "pmemobj_tx_xalloc",
        "pmemobj_tx_xlock",
        "pmemobj_tx_xlog_append_buffer",
        "pmemobj_tx_xstrdup",
        "pmemobj_tx_xwcsdup",
        "pmemobj_tx_zalloc",
        "pmemobj_tx_zrealloc",
        "pmemobj_type_num",
        "pmemobj_volatile",
        "pmemobj_xreserve",
        "pmemobj_tx_alloc",
        "pmemobj_wcsdup",
        "pmemobj_xalloc",
        "pmemobj_zalloc",
        "pmemobj_zrealloc",
        "pmemobj_xflush",
        "pmemobj_xpersist"
    ],
    "dead_end": [
        "prealloc"
    ],
    "extra_calls": {
        "core_init": [
            "util_init",
            "out_init"
        ],
        "core_fini": [
            "out_fini"
        ],
        "ERR": [
            "out_err"
        ],
        "Print": [
            "out_print_func"
        ],
        "common_init": [
            "core_init",
            "util_mmap_init"
        ],
        "common_fini": [
            "util_mmap_fini",
            "core_fini"
        ],
        "Last_errormsg_key_alloc": [
            "_Last_errormsg_key_alloc"
        ],
        "_Last_errormsg_key_alloc": [
            "os_once",
            "os_tls_key_create"
        ],
        "flush_empty": [
            "flush_empty_nolog"
        ],
        "libpmemobj_init": [
            "common_init"
        ],
        "out_common": [
            "out_snprintf"
        ],
        "run_vg_init": [
            "run_iterate_used"
        ],
        "palloc_heap_action_on_unlock": [
            "palloc_reservation_clear"
        ],
        "palloc_heap_action_on_cancel": [
            "palloc_reservation_clear",
            "block_invalidate"
        ],
        "util_uuid_generate": [
            "util_uuid_from_string"
        ],
        "bucket_insert_block": [
            "container_ravl_insert_block",
            "container_seglists_insert_block"
        ],
        "bucket_fini": [
            "container_ravl_destroy",
            "container_seglists_destroy"
        ],
        "heap_free_chunk_reuse": [
            "huge_prep_operation_hdr",
            "run_prep_operation_hdr"
        ],
        "palloc_heap_action_exec": [
            "huge_prep_operation_hdr",
            "run_prep_operation_hdr"
        ],
        "alloc_prep_block": [
            "block_write_header"
        ],
        "heap_get_bestfit_block": [
            "huge_ensure_header_type",
            "run_ensure_header_type"
        ],
        "palloc_vg_register_alloc": [
            "block_reinit_header"
        ],
        "heap_vg_open": [
            "huge_vg_init",
            "run_vg_init"
        ],
        "bucket_attach_run": [
            "huge_iterate_free",
            "run_iterate_free"
        ],
        "heap_zone_foreach_object": [
            "huge_iterate_used",
            "run_iterate_used"
        ],
        "recycler_element_new": [
            "run_calc_free"
        ],
        "block_write_header": [
            "memblock_header_legacy_write",
            "memblock_header_compact_write",
            "memblock_header_none_write"
        ],
        "block_invalidate": [
            "memblock_header_legacy_invalidate",
            "memblock_header_compact_invalidate",
            "memblock_header_none_invalidate"
        ],
        "block_reinit_header": [
            "memblock_header_legacy_reinit",
            "memblock_header_compact_reinit",
            "memblock_header_none_reinit"
        ],
        "palloc_cancel": [
            "palloc_heap_action_on_cancel",
            "palloc_mem_action_noop"
        ],
        "palloc_exec_actions": [
            "palloc_heap_action_on_process",
            "palloc_mem_action_noop",
            "palloc_heap_action_on_unlock",
            "palloc_mem_action_noop"
        ],
        "ctl_exec_query_read": [
            "ctl__persistent_curr_allocated_read",
            "ctl__transient_run_allocated_read",
            "ctl__transient_run_active_read"
        ],
        "ctl_exec_query_write": [
            "ctl__arenas_assignment_type_write",
            "ctl__desc_write",
            "ctl__enabled_write"
        ],
        "ctl_query": [
            "ctl_exec_query_read",
            "ctl_exec_query_write"
        ],
        "pmemops_xpersist": [
            "obj_rep_persist",
            "obj_norep_persist"
        ],
        "pmemops_xflush": [
            "obj_rep_persist",
            "obj_norep_persist"
        ],
        "pmemops_drain": [
            "obj_rep_drain",
            "obj_norep_drain",
            "operation_transient_drain"
        ],
        "pmemops_memcpy": [
            "obj_rep_memcpy",
            "obj_norep_memcpy",
            "operation_transient_memcpy"
        ],
        "pmemops_memmove": [
            "obj_rep_memmove",
            "obj_norep_memmove"
        ],
        "pmemops_memset": [
            "obj_rep_memset",
            "obj_norep_memset"
        ],
        "ulog_entry_apply": [
            "obj_rep_persist",
            "obj_norep_persist",
            "obj_rep_flush",
            "obj_norep_flush",
            "operation_transient_clean",
            ""
        ],
        "obj_norep_persist": [
            "pmem_persist",
            "obj_msync_nofail"
        ],
        "obj_rep_persist": [
            "pmem_persist",
            "obj_msync_nofail"
        ],
        "obj_norep_flush": [
            "pmem_flush",
            "obj_msync_nofail",
            "pmem_memcpy",
            "obj_nopmem_memcpy"
        ],
        "obj_rep_flush": [
            "pmem_flush",
            "obj_msync_nofail",
            "pmem_memcpy",
            "obj_nopmem_memcpy"
        ],
        "obj_norep_drain": [
            "pmem_drain",
            "obj_drain_empty"
        ],
        "obj_rep_drain": [
            "pmem_drain",
            "obj_drain_empty"
        ],
        "obj_norep_memcpy": [
            "pmem_memcpy",
            "obj_nopmem_memcpy"
        ],
        "obj_rep_memcpy": [
            "pmem_memcpy",
            "obj_nopmem_memcpy"
        ],
        "obj_replicas_check_basic": [
            "pmem_memcpy",
            "obj_nopmem_memcpy"
        ],
        "obj_norep_memmove": [
            "pmem_memmove",
            "obj_nopmem_memmove"
        ],
        "obj_rep_memmove": [
            "pmem_memmove",
            "obj_nopmem_memmove"
        ],
        "obj_norep_memset": [
            "pmem_memset",
            "obj_nopmem_memset"
        ],
        "obj_rep_memset": [
            "pmem_memset",
            "obj_nopmem_memset"
        ]
    },
    "white_list": [
        "buff_concat.constprop",
        "check_domain_in_region",
        "check_pool_hdr_uuids",
        "check_pool_hdr",
        "check_status_create",
        "features_check",
        "handle_sigbus_execute_mcsafe_op",
        "list_fill_entry_redo_log",
        "memmove_mov_avx_empty",
        "memmove_mov_avx512f_empty",
        "memmove_mov_sse2_empty",
        "memmove_movnt_avx_clflush_nobarrier",
        "memmove_movnt_avx_clflush_wcbarrier",
        "memmove_movnt_avx_clflushopt_nobarrier",
        "memmove_movnt_avx_clflushopt_wcbarrier",
        "memmove_movnt_avx_clwb_nobarrier",
        "memmove_movnt_avx_clwb_wcbarrier",
        "memmove_movnt_avx_empty_nobarrier",
        "memmove_movnt_avx_empty_wcbarrier",
        "memmove_movnt_avx_noflush_nobarrier",
        "memmove_movnt_avx_noflush_wcbarrier",
        "memmove_movnt_avx512f_clflush",
        "memmove_movnt_avx512f_clflushopt",
        "memmove_movnt_avx512f_clwb",
        "memmove_movnt_avx512f_empty",
        "memmove_movnt_avx512f_noflush",
        "memmove_movnt_movdir64b_clflush",
        "memmove_movnt_movdir64b_clflushopt",
        "memmove_movnt_movdir64b_clwb",
        "memmove_movnt_movdir64b_empty",
        "memmove_movnt_movdir64b_noflush",
        "memmove_movnt_sse2_clflush_nobarrier",
        "memmove_movnt_sse2_clflush_wcbarrier",
        "memmove_movnt_sse2_clflushopt_nobarrier",
        "memmove_movnt_sse2_clflushopt_wcbarrier",
        "memmove_movnt_sse2_clwb_nobarrier",
        "memmove_movnt_sse2_clwb_wcbarrier",
        "memmove_movnt_sse2_empty_nobarrier",
        "memmove_movnt_sse2_empty_wcbarrier",
        "memmove_movnt_sse2_noflush_nobarrier",
        "memmove_movnt_sse2_noflush_wcbarrier",
        "memset_mov_avx_empty",
        "memset_mov_avx512f_clflush",
        "memset_mov_avx512f_clflushopt",
        "memset_mov_avx512f_clwb",
        "memset_mov_avx512f_empty",
        "memset_mov_avx512f_noflush",
        "memset_mov_sse2_empty",
        "memset_movnt_avx_clflush_nobarrier",
        "memset_movnt_avx_clflush_wcbarrier",
        "memset_movnt_avx_clflushopt_nobarrier",
        "memset_movnt_avx_clflushopt_wcbarrier",
        "memset_movnt_avx_clwb_nobarrier",
        "memset_movnt_avx_clwb_wcbarrier",
        "memset_movnt_avx_empty_nobarrier",
        "memset_movnt_avx_empty_wcbarrier",
        "memset_movnt_avx_noflush_nobarrier",
        "memset_movnt_avx_noflush_wcbarrier",
        "memset_movnt_avx512f_clflush",
        "memset_movnt_avx512f_clflushopt",
        "memset_movnt_avx512f_clwb",
        "memset_movnt_avx512f_empty",
        "memset_movnt_avx512f_noflush",
        "memset_movnt_movdir64b_clflush",
        "memset_movnt_movdir64b_clflushopt",
        "memset_movnt_movdir64b_clwb",
        "memset_movnt_movdir64b_empty",
        "memset_movnt_movdir64b_noflush",
        "memset_movnt_sse2_clflush_nobarrier",
        "memset_movnt_sse2_clflush_wcbarrier",
        "memset_movnt_sse2_clflushopt_nobarrier",
        "memset_movnt_sse2_clflushopt_wcbarrier",
        "memset_movnt_sse2_clwb_nobarrier",
        "memset_movnt_sse2_clwb_wcbarrier",
        "memset_movnt_sse2_empty_nobarrier",
        "memset_movnt_sse2_empty_wcbarrier",
        "memset_movnt_sse2_noflush_nobarrier",
        "memset_movnt_sse2_noflush_wcbarrier",
        "replica_check_store_size",
        "pool_params_parse.isra.2.constprop",
        "pool_hdr_default_fix",
        "pool_hdr_default_check",
        "pool_set_type",
        "list_insert_new",
        "util_emit_log",
        "palloc_defrag",
        "replica_sync",
        "pool_params_parse",
        "util_tmpfile_mkstemp",
        "util_compare_file_inodes",
        "replica_check_poolset_health",
        "replica_transform",
        "pmem2_flush_file_buffers_os",
        "pmem2_map_new",
        "list_move",
        "list_remove_free_user",
        "out_nonl",
        "out_log",
        "out_fatal",
        "buff_concat",
        "pool_set_part_copy",
        "pmem2_perror",
        "replica_check_local_part_dir",
        "pool_data_alloc",
        "pmem_map_file",
        "pmem2_vm_reservation_map_find",
        "list_insert",
        "rm_local",
        "pool_copy",
        "pmempool_rm",
        "pmem2_map_delete",
        "pmem2_auto_flush",
        "vm_reservation_map_find_acquire",
        "tx_realloc_common",
        "pmemobj_list_insert_new",
        "pmemobj_cond_timedwait",
        "pmem2_map_find",
        "palloc_next",
        "palloc_first",
        "obj_realloc_common",
        "util_fd_get_type",
        "sds_check_replica",
        "pool_hdr_uuid_links",
        "pool_hdr_uuid_links",
        "pmem2_persist_pages",
        "list_remove",
        "pmem2_map_from_existing",
        "pmalloc",
        "memset_mov_avx_noflush",
        "memset_mov_avx_clwb",
        "memset_mov_avx_clflush",
        "memset_mov_avx_clflushopt",
        "list_insert_new_user",
        "poolset_open",
        "pmempool_check",
        "pmempool_check_end",
        "pmempool_check_init",
        "pmempool_check_version",
        "pmempool_errormsg",
        "pmempool_feature_disable",
        "pmempool_feature_enable",
        "pmempool_feature_query",
        "pmempool_sync",
        "pmempool_transform",
        "pmem_check_version",
        "pmem_deep_drain",
        "pmem_deep_persist",
        "pmem_emit_log",
        "pmem_errormsg",
        "pmem_has_auto_flush",
        "pmem_has_hw_drain",
        "pmem_map_register",
        "pmem_memcpy_nodrain",
        "pmem_memcpy_persist",
        "pmem_memmove_nodrain",
        "pmem_memmove_nodrain_eadr",
        "pmem_memmove_persist",
        "pmem_memset_nodrain",
        "pmem_memset_nodrain_eadr",
        "pmem_memset_persist",
        "pmem_os_init",
        "pmem_unmap",
        "check_answer_loop",
        "check_backup",
        "check_bad_blocks",
        "check_clear_status_cache",
        "check_data_alloc",
        "check_data_free",
        "check_end",
        "check_fini",
        "check_get_step_data",
        "check_get_time_str",
        "check_get_uuid_str",
        "check_has_answer",
        "check_has_error",
        "check_init",
        "check_is_end",
        "check_is_end_util",
        "check_pop_error",
        "check_pop_info",
        "check_pop_question",
        "check_push_answer",
        "check_questions_sequence_validate",
        "check_sds",
        "check_status_get",
        "check_status_get_util",
        "check_status_release",
        "check_step",
        "check_step_get",
        "check_step_inc",
        "is_cpu_avx_present",
        "is_cpu_avx512f_present",
        "is_cpu_clflush_present",
        "is_cpu_clflushopt_present",
        "is_cpu_clwb_present",
        "is_cpu_genuine_intel",
        "is_cpu_movdir64b_present",
        "memmove_mov_avx_clflush",
        "memmove_mov_avx_clflushopt",
        "memmove_mov_avx_clwb",
        "memmove_mov_avx_noflush",
        "memmove_mov_avx512f_clflush",
        "memmove_mov_avx512f_clflushopt",
        "memmove_mov_avx512f_clwb",
        "memmove_mov_avx512f_noflush",
        "memmove_mov_sse2_clflush",
        "memmove_mov_sse2_clflushopt",
        "memmove_mov_sse2_clwb",
        "memmove_mov_sse2_noflush",
        "memmove_nodrain_libc",
        "memset_mov_sse2_clflush",
        "memset_mov_sse2_clflushopt",
        "memset_mov_sse2_clwb",
        "memset_mov_sse2_noflush",
        "memset_nodrain_generic",
        "memset_nodrain_libc",
        "memmove_nodrain_generic",
        "pmem2_arch_init",
        "pmem2_badblock_clear",
        "pmem2_deep_flush_byte",
        "pmem2_deep_flush_cache",
        "pmem2_flush_cpu_cache",
        "pmem2_memmove_eadr",
        "pmem2_memmove_nonpmem",
        "pmem2_memmove",
        "pmem2_memset_eadr",
        "pmem2_memset_nonpmem",
        "pmem2_memset",
        "pmem2_source_check_op_size",
        "pmem2_source_from_anon",
        "pmem2_source_numa_node",
        "pmem2_source_pread_mcsafe",
        "pmem2_source_pwrite_mcsafe",
        "pmem2_vm_reservation_delete",
        "pmem2_vm_reservation_extend",
        "pmem2_vm_reservation_new",
        "pmem2_vm_reservation_shrink",
        "vm_reservation_reserve_memory",
        "_get_value",
        "backup_poolset_requirements",
        "backup_poolset",
        "badblocks_clear_all",
        "badblocks_clear",
        "copy_replica_data_fw",
        "devdax_read",
        "devdax_write",
        "disable_checksum_2k",
        "enable_shutdown_state",
        "feature_set",
        "get_min_granularity",
        "get_replica_uuid",
        "ctl_arg_integer",
        "heap_arena_create",
        "heap_force_recycle",
        "heap_foreach_object",
        "heap_get_thread_arena_id",
        "heap_set_arena_auto",
        "heap_set_narenas_max",
        "list_insert_user",
        "list_remove_single",
        "mcsafe_op_reg_read",
        "mcsafe_op_reg_write",
        "os_range_deep_common",
        "palloc_flags",
        "palloc_usable_size",
        "pmemobj_mutex_assert_locked",
        "pool_hdr_nondefault_fix",
        "pool_hdr_poolset_uuid_find",
        "pool_hdr_preliminary_check",
        "pool_hdr_uuid_find",
        "pool_params_from_header",
        "pool_set_file_map_headers",
        "pool_set_file_unmap_headers",
        "pool_set_parse",
        "poolset_close",
        "query_feature",
        "ravl_interval_find_equal",
        "ravl_interval_find_next",
        "ravl_interval_find_prev",
        "ravl_interval_find",
        "ravl_interval_insert",
        "replica_check_part_dirs",
        "replica_create_poolset_health_status",
        "replica_free_poolset_health_status",
        "replica_is_replica_broken",
        "replica_open_replica_part_files",
        "replica_read_features",
        "replica_remove_all_recovery_files",
        "replica_remove_part",
        "require_other_feature_is",
        "operation_user_buffer_verify_align",
        "palloc_extra",
        "run_fill_pct",
        "run_get_state",
        "sds_check",
        "stats_enabled_parser",
        "status_push",
        "step_exe",
        "util_aligned_malloc",
        "util_concat_str",
        "util_feature2pmempool_feature",
        "util_feature2str",
        "util_file_map_whole",
        "util_file_pread",
        "util_file_pwrite",
        "util_is_poolset_file",
        "util_localtime",
        "util_pool_open_nocheck",
        "util_poolset_foreach_part",
        "util_poolset_read",
        "util_poolset_size",
        "util_range_register",
        "util_range_unregister",
        "util_str2feature",
        "util_uuid_to_string",
        "util_write_all"
    ]
}