.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "pmempool\-create" "1" "" "" ""
.hy
.PP
NAME
.PP
SYNOPSIS
.PP
DESCRIPTION
.PP
EXAMPLES
.PP
SEE ALSO
.PP
PMEMPOOL
.SS NAME
.PP
\f[B]pmempool\-create\f[] − Create Persistent Memory Pool of specified
type
.SS SYNOPSIS
.IP
.nf
\f[C]
pmempool\ create\ [<options>]\ [<type>]\ [<bsize>]\ <file>
\f[]
.fi
.SS DESCRIPTION
.PP
The \f[B]pmempool\f[] invoked with \f[C]create\f[] command creates a
pool file of specified type.
Depending on a pool type it is possible to provide more properties of
pool.
.PP
Valid pool types are: \f[B]blk\f[], \f[B]log\f[] and \f[B]obj\f[] which
stands for \f[I]pmemblk\f[], \f[I]pmemlog\f[] and \f[I]pmemobj\f[] pools
respectively.
By default the pool file is created with \f[I]minimum\f[] allowed size
for specified pool type.
The minimum sizes for \f[B]blk\f[] \f[B]log\f[] and \f[B]obj\f[] pool
types are \f[C]PMEMBLK_MIN_POOL\f[], \f[C]PMEMLOG_MIN_POOL\f[] and
\f[C]PMEMOBJ_MIN_POOL\f[] respectively.
See \f[B]libpmemblk\f[](3), \f[B]libpmemlog\f[](3) and
\f[B]libpmemobj\f[](3) for details.
.PP
For \f[I]pmemblk\f[] pool type block size \f[C]<bsize>\f[] is a required
argument.
.PP
In order to set custom size of pool use \f[C]\-s\f[] option, or use
\f[C]\-M\f[] option to create a pool of maximum available size on
underlying file system.
.PP
The \f[C]size\f[] argument may be passed in format that permits only the
upper\-case character for byte \- B as specified in IEC 80000\-13, IEEE
1541 and the Metric Interchange Format.
Standards accept SI units with obligatory B \- kB, MB, GB \&... which
means multiplier by 1000 and IEC units with optional “iB” \- KiB, MiB,
GiB, \&..., K, M, G, \&... \- which means multiplier by 1024.
.SS Available options:
.TP
.B \f[C]\-s,\ \[en]size\ <size>\f[]
Size of pool file.
.RS
.RE
.TP
.B \f[C]\-M,\ \[en]max\-size\f[]
Set size of pool to available space of underlying file system.
.RS
.RE
.TP
.B \f[C]\-m,\ \[en]mode\ <octal>\f[]
Set permissions to (the default is 0664).
.RS
.RE
.TP
.B \f[C]\-i,\ \[en]inherit\ <file>\f[]
Create a new pool of the same size and other properties as
\f[C]<file>\f[].
.RS
.RE
.TP
.B \f[C]\-v,\ \[en]verbose\f[]
Increase verbosity level.
.RS
.RE
.TP
.B \f[C]\-h,\ \[en]help\f[]
Display help message and exit.
.RS
.RE
.SS Options for PMEMBLK:
.PP
By default when creating a pmem \f[B]blk\f[] pool, the \f[B]BTT\f[]
layout is \f[I]not\f[] written until the first \f[I]write operation\f[]
of block entry is performed.
Using \f[C]\-w\f[] option you can force writing the \f[B]BTT\f[] layout.
Please refer to \f[B]libpmemblk\f[](3) for details.
.TP
.B \f[C]\-w,\ \[en]write\-layout\f[]
Force writing the \f[B]BTT\f[] layout.
.RS
.RE
.SS Options for PMEMOBJ:
.PP
By default when creating a pmem \f[B]obj\f[] pool, the layout name
provided to the \f[B]libpmemobj\f[] library is an empty string.
Please refer to \f[B]libpmemobj\f[](3) for details.
.TP
.B \f[C]\-l,\ \[en]layout\ <layout>\f[]
Layout name of the \f[B]pmemobj\f[] pool.
.RS
.RE
.SS EXAMPLES
.TP
.B \f[C]pmempool\ create\ blk\ 512\ pool.blk\f[]
Create a blk pool file of minimum allowed size and block size 512 bytes
.RS
.RE
.TP
.B \f[C]pmempool\ create\ log\ \-M\ pool.log\f[]
Create a log pool file of maximum allowed size
.RS
.RE
.TP
.B \f[C]pmempool\ create\ blk\ \[en]size=4G\ \[en]write\-layout\ 1K\ pool.blk\f[]
Create a blk pool file of size 4G, block size 1K and write the BTT
layout
.RS
.RE
.TP
.B \f[C]pmempool\ create\ \[en]layout\ my_layout\ obj\ pool.obj\f[]
Create an obj pool file of minimum allowed size and layout 'my_layout'
.RS
.RE
.TP
.B \f[C]pmempool\ create\ \[en]inherit=pool.log\ new_pool.log\f[]
Create a pool file based on pool.log file
.RS
.RE
.SS SEE ALSO
.PP
\f[B]libpmemblk(3)\f[], \f[B]libpmemlog(3)\f[], \f[B]pmempool(1)\f[]
.SS PMEMPOOL
.PP
Part of the \f[B]pmempool(1)\f[] suite.
