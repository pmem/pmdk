.\" Automatically generated by Pandoc 2.1.3
.\"
.TH "PMEMPOOL_RM" "3" "2018-05-07" "PMDK - pmempool API version 1.3" "PMDK Programmer's Manual"
.hy
.\" Copyright 2014-2018, Intel Corporation
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in
.\"       the documentation and/or other materials provided with the
.\"       distribution.
.\"
.\"     * Neither the name of the copyright holder nor the names of its
.\"       contributors may be used to endorse or promote products derived
.\"       from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
.\" LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
.\" OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.SH NAME
.PP
\f[B]pmempool_rm\f[]() \[en] remove persistent memory pool
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmempool.h>

int\ pmempool_rm(const\ char\ *path,\ int\ flags);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmempool_rm\f[]() function removes the pool pointed to by
\f[I]path\f[].
The \f[I]path\f[] can point to a regular file, device dax or pool set
file.
If \f[I]path\f[] is a pool set file, \f[B]pmempool_rm\f[]() will remove
all part files from local replicas using \f[B]unlink\f[](2), and all
remote replicas using \f[B]rpmem_remove\f[](3) (see
\f[B]librpmem\f[](7)), before removing the pool set file itself.
.PP
The \f[I]flags\f[] argument determines the behavior of
\f[B]pmempool_rm\f[]().
It is either 0 or the bitwise OR of one or more of the following flags:
.IP \[bu] 2
\f[B]PMEMPOOL_RM_FORCE\f[] \- Ignore all errors when removing part files
from local or remote replicas.
.IP \[bu] 2
\f[B]PMEMPOOL_RM_POOLSET_LOCAL\f[] \- Also remove local pool set file.
.IP \[bu] 2
\f[B]PMEMPOOL_RM_POOLSET_REMOTE\f[] \- Also remove remote pool set file.
.SH RETURN VALUE
.PP
On success, \f[B]pmempool_rm\f[]() returns 0.
On error, it returns \-1 and sets \f[I]errno\f[] accordingly.
.SH SEE ALSO
.PP
\f[B]rpmem_remove\f[](3), \f[B]unlink\f[](3), \f[B]libpmemlog\f[](7),
\f[B]libpmemobj\f[](7), \f[B]librpmem\f[](7) and
\f[B]<http://pmem.io>\f[]
