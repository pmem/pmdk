#!/usr/bin/env bash
#
# Copyright 2019, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# src/test/ex_librpmem_hello/TEST1 -- hello example unittest
#

. ../unittest/unittest.sh

require_test_type short

require_nodes 2

require_node_libfabric 0 $RPMEM_PROVIDER
require_node_libfabric 1 $RPMEM_PROVIDER

setup

init_rpmem_on_node 1 0

POOLSET=pool.set
TEST_FILE_REMOTE="testfile_remote"

create_poolset $DIR/$POOLSET \
	32M:${NODE_DIR[0]}/$TEST_FILE_REMOTE:x

copy_files_to_node 0 ${NODE_DIR[0]} $DIR/$POOLSET

rm_files_from_node 0 ${NODE_DIR[0]}$TEST_FILE_REMOTE

LOG=out1.log
rm_files_from_node 1 ${NODE_DIR[1]}/../$LOG

for i in `seq 1 2`; do
	expect_normal_exit run_on_node 1 \""./hello \
			${NODE_ADDR[0]} $POOLSET >> $LOG\""
done

# opening pool with unknown signature
run_on_node 0 ../pmemspoil.sh ${NODE_DIR[0]}/$TEST_FILE_REMOTE \
	hdr_inv_signature_and_checksum_gen
expect_abnormal_exit run_on_node 1 "\"./hello ${NODE_ADDR[0]} $POOLSET 2>>$LOG\""

check

pass
