#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2024, Intel Corporation
#
#
# pmempool_sync/TEST11 -- test for checking pmempool sync
#                         pmem/issues#344
#

. ../unittest/unittest.sh

require_test_type medium
require_fs_type any

setup

LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log
rm -f $LOG && touch $LOG
rm -f $LOG_TEMP && touch $LOG_TEMP

LAYOUT=OBJ_LAYOUT$SUFFIX
POOLSET1=$DIR/poolset1
POOLSET2=$DIR/poolset2
POOLSET3=$DIR/poolset3

# Create poolset files
create_poolset $POOLSET1 \
	10M:$DIR/part00:x \
	r \
	10M:$DIR/part10:x

create_poolset $POOLSET2 \
	10M:$DIR/part20:x

create_poolset $POOLSET3 \
	10M:$DIR/part00:x \
	r \
	10M:$DIR/part10:x \
	r \
	10M:$DIR/part20:x

# Log poolset structures
echo poolset1: >> $LOG_TEMP
cat $POOLSET1 >> $LOG_TEMP
echo poolset2: >> $LOG_TEMP
cat $POOLSET2 >> $LOG_TEMP
echo poolset3: >> $LOG_TEMP
cat $POOLSET3 >> $LOG_TEMP

# Create poolsets
expect_normal_exit $PMEMPOOL$EXESUFFIX create --layout=$LAYOUT obj $POOLSET1
cat $LOG >> $LOG_TEMP
expect_normal_exit $PMEMPOOL$EXESUFFIX create --layout=$LAYOUT obj $POOLSET2
cat $LOG >> $LOG_TEMP

# Spoil the first and the third replicas
expect_normal_exit $DDMAP$EXESUFFIX -o $DIR/part00 -n 10 -b 1
expect_normal_exit $DDMAP$EXESUFFIX -o $DIR/part20 -n 10 -b 1

# Try to synchronize replicas using the third poolset
expect_abnormal_exit $PMEMPOOL$EXESUFFIX sync $POOLSET3 &>> $LOG_TEMP

# Exclude error and warn messages printed out on the stderr by PMDK in debug
fgrep -v "*ERROR*" $LOG_TEMP | fgrep -v "*WARN*" > $LOG
rm $LOG_TEMP

check

pass
