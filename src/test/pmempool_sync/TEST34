#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2018-2024, Intel Corporation
#
#
# pmempool_sync/TEST34 -- test for sync command
#                         with bad blocks recovery files
#                         and one bad block:
#                         - offset: 1000 length: 250
#                         in the 1st part
#

. ../unittest/unittest.sh

. setup.sh

require_test_type medium
require_fs_type non-pmem
require_build_type debug nondebug
require_linked_with_ndctl $PMEMPOOL$EXESUFFIX

setup

LOG=out${UNITTEST_NUM}.log
rm -f $LOG && touch $LOG

POOLSET=$DIR/testset1
create_poolset $POOLSET \
	${PARTSIZE}M:$DIR/testfile0:z \
	${PARTSIZE}M:$DIR/testfile1:z \
	${PARTSIZE}M:$DIR/testfile2:z \
	R \
	${POOLSIZE_REP}M:$DIR/testfile3:z

expect_normal_exit $PMEMPOOL$EXESUFFIX rm $POOLSET
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj --layout pmempool$SUFFIX $POOLSET

expect_normal_exit "$OBJ_VERIFY$EXESUFFIX $POOLSET pmempool$SUFFIX c v &>> $LOG"

# zero blocks: offset: 1000 length: 250 in the 1st part
zero_blocks $DIR/testfile0 1000 250

# fail because of bad blocks
expect_abnormal_exit "$OBJ_VERIFY$EXESUFFIX $POOLSET pmempool$SUFFIX v &>> $LOG"

# create recovery files
create_recovery_file $DIR/testset1_r0_p0_badblocks.txt 1000 250
create_recovery_file $DIR/testset1_r0_p1_badblocks.txt
create_recovery_file $DIR/testset1_r0_p2_badblocks.txt
create_recovery_file $DIR/testset1_r1_p0_badblocks.txt

turn_on_checking_bad_blocks $POOLSET

# fail because of recovery files
expect_abnormal_exit "$OBJ_VERIFY$EXESUFFIX $POOLSET pmempool$SUFFIX v &>> $LOG"

# repair
expect_normal_exit "$PMEMPOOL$EXESUFFIX sync -b -v $POOLSET >> $LOG"

expect_normal_exit "$OBJ_VERIFY$EXESUFFIX $POOLSET pmempool$SUFFIX v &>> $LOG"

# Exclude error and warn messages printed out on the stderr by PMDK in debug
LOG_TEMP=$LOG.log
fgrep -v "*ERROR*" $LOG | fgrep -v "*WARN*" > $LOG_TEMP
mv $LOG_TEMP $LOG

check

pass
