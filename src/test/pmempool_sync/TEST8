#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2024, Intel Corporation
#
#
# pmempool_sync/TEST8 -- test for checking pmempool sync;
#                        pmem/issues#302
#

. ../unittest/unittest.sh

require_test_type medium
require_fs_type any

setup

LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log
rm -f $LOG && touch $LOG
rm -f $LOG_TEMP && touch $LOG_TEMP

LAYOUT=OBJ_LAYOUT$SUFFIX
POOLSET1=$DIR/poolset1
POOLSET2=$DIR/poolset2

# Create poolset files
create_poolset $POOLSET1 \
	20M:$DIR/part00:x \
	20M:$DIR/part01:x \
	r \
	20M:$DIR/part10:x \
	20M:$DIR/part11:x

create_poolset $POOLSET2 \
	20M:$DIR/part00:x \
	20M:$DIR/part01:x \
	r \
	20M:$DIR/part10:x \
	1M:$DIR/part11:x

# Log poolset structures
echo poolset1: >> $LOG_TEMP
cat $POOLSET1 >> $LOG_TEMP
echo poolset2: >> $LOG_TEMP
cat $POOLSET2 >> $LOG_TEMP

# Create a poolset
expect_normal_exit $PMEMPOOL$EXESUFFIX create --layout=$LAYOUT obj $POOLSET1
cat $LOG >> $LOG_TEMP

# Delete parts from the second replica
rm -f $DIR/part10
rm -f $DIR/part11

# Synchronize replicas using the second poolset
expect_abnormal_exit $PMEMPOOL$EXESUFFIX sync $POOLSET2 >> $LOG_TEMP 2>&1

# Exclude error and warn messages printed out on the stderr by PMDK in debug
fgrep -v "*ERROR*" $LOG_TEMP | fgrep -v "*WARN*" > $LOG
rm $LOG_TEMP

check

pass
