#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2018-2023, Intel Corporation
#
#
# pmempool_sync/TEST26 -- test for checking pmempool sync;
#                        a case with no replica in the pool set;
#                        pmem/issues#817
#
export UNITTEST_NAME=pmempool_sync/TEST26
export UNITTEST_NUM=26

. ../unittest/unittest.sh

require_test_type medium
require_fs_type any

setup

LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log
rm -f $LOG && touch $LOG
rm -f $LOG_TEMP && touch $LOG_TEMP

LAYOUT=OBJ_LAYOUT$SUFFIX
POOLSET=$DIR/pool0.set

# Create poolset file
create_poolset $POOLSET \
	20M:$DIR/testfile1:x \
	20M:$DIR/testfile2:x

# Create pmemobj poolset
expect_normal_exit $PMEMPOOL$EXESUFFIX create --layout=$LAYOUT obj $POOLSET
cat $LOG >> $LOG_TEMP

# Synchronize healthy pool set - should fail as there are no replicas
expect_abnormal_exit $PMEMPOOL$EXESUFFIX sync $POOLSET >> $LOG_TEMP 2>&1

# Corrupt metadata in primary replica, leave incorrect checksum
expect_normal_exit $PMEMSPOIL $DIR/testfile1 pool_hdr.uuid=0000000000000000\
	>> $LOG_TEMP

# Synchronize broken pool set - should fail as there are no other replicas
expect_abnormal_exit $PMEMPOOL$EXESUFFIX sync $POOLSET >> $LOG_TEMP 2>&1

# Remove poolset
expect_normal_exit $PMEMPOOL$EXESUFFIX rm $POOLSET

mv $LOG_TEMP $LOG
check

pass
