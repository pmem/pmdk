==$(N)== Memcheck, a memory error detector
==$(N)== Copyright $(*)
==$(N)== Using $(*)
==$(N)== Command: $(*)
==$(N)== Parent PID: $(N)
==$(N)== 
==$(N)== Conditional jump or move depends on uninitialised value(s)
==$(N)==    at 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)== 
==$(N)== Invalid write of size 4
==$(N)==    at 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)==  Address 0x$(X) is $(N) bytes inside a block of size $(N) free'd
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_free $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_free $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    $(S) 0x$(X): alloc_prep_block $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_reservation_create $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_alloc_construct $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_alloc $(*)
$(OPT)==$(N)==    $(S) 0x$(X): test_everything $(*)
$(OPT)==$(N)==    $(S) 0x$(X): main $(*)
==$(N)== 
==$(N)== Unaddressable byte(s) found during client check request
==$(N)==    at 0x$(X): pmem_msync $(*)
$(OPT)==$(N)==    by 0x$(X): obj_norep_persist $(*)
$(OPT)==$(N)==    by 0x$(X): pmemops_persist $(*)
$(OPT)==$(N)==    by 0x$(X): pmemobj_persist $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)==  Address 0x$(X) is 0 bytes inside a block of size $(N) free'd
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_free $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_free $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    $(S) 0x$(X): alloc_prep_block $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_reservation_create $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_alloc_construct $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_alloc $(*)
$(OPT)==$(N)==    $(S) 0x$(X): test_everything $(*)
$(OPT)==$(N)==    $(S) 0x$(X): main $(*)
==$(N)== 
==$(N)== Invalid write of size 4
==$(N)==    at 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Address 0x$(X) is not stack'd, malloc'd or (recently) free'd
$(OPT)==$(N)==  Address 0x$(X) is in a rw- mapped file $(nW) segment
==$(N)== 
==$(N)== Invalid write of size 4
==$(N)==    at 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Address 0x$(X) is not stack'd, malloc'd or (recently) free'd
$(OPT)==$(N)==  Address 0x$(X) is in a rw- mapped file $(nW) segment
==$(N)== 
==$(N)== Invalid write of size 4
==$(N)==    at 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)==  Address 0x$(X) is $(N) bytes inside a block of size $(N) free'd
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_free $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_free $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    $(S) 0x$(X): alloc_prep_block $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_reservation_create $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_realloc_common $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_realloc $(*)
$(OPT)==$(N)==    $(S) 0x$(X): test_everything $(*)
$(OPT)==$(N)==    $(S) 0x$(X): main $(*)
==$(N)== 
==$(N)== Unaddressable byte(s) found during client check request
==$(N)==    at 0x$(X): pmem_msync $(*)
$(OPT)==$(N)==    by 0x$(X): obj_norep_persist $(*)
$(OPT)==$(N)==    by 0x$(X): pmemops_persist $(*)
$(OPT)==$(N)==    by 0x$(X): pmemobj_persist $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)==  Address 0x$(X) is $(N) bytes inside a block of size $(N) free'd
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_free $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_free $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    $(S) 0x$(X): alloc_prep_block $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_reservation_create $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_realloc_common $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_realloc $(*)
$(OPT)==$(N)==    $(S) 0x$(X): test_everything $(*)
$(OPT)==$(N)==    $(S) 0x$(X): main $(*)
==$(N)== 
==$(N)== Invalid write of size 4
==$(N)==    at 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)==  Address 0x$(X) is $(N) bytes inside a block of size $(N) free'd
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_free $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_free $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    $(S) 0x$(X): alloc_prep_block $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_reservation_create $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_realloc_common $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_realloc $(*)
$(OPT)==$(N)==    $(S) 0x$(X): test_everything $(*)
$(OPT)==$(N)==    $(S) 0x$(X): main $(*)
==$(N)== 
==$(N)== Unaddressable byte(s) found during client check request
==$(N)==    at 0x$(X): pmem_msync $(*)
$(OPT)==$(N)==    by 0x$(X): obj_norep_persist $(*)
$(OPT)==$(N)==    by 0x$(X): pmemops_persist $(*)
$(OPT)==$(N)==    by 0x$(X): pmemobj_persist $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
==$(N)==  Address 0x$(X) is 0 bytes inside a block of size $(N) free'd
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_free $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_free $(*)
==$(N)==    by 0x$(X): test_everything (obj_memcheck.c:$(N))
==$(N)==    by 0x$(X): main (obj_memcheck.c:$(N))
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    $(S) 0x$(X): alloc_prep_block $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_reservation_create $(*)
$(OPT)==$(N)==    $(S) 0x$(X): palloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmalloc_operation $(*)
$(OPT)==$(N)==    $(S) 0x$(X): obj_realloc_common $(*)
$(OPT)==$(N)==    $(S) 0x$(X): pmemobj_realloc $(*)
$(OPT)==$(N)==    $(S) 0x$(X): test_everything $(*)
$(OPT)==$(N)==    $(S) 0x$(X): main $(*)
==$(N)== 
==$(N)== Invalid write of size $(N)
==$(N)==    at 0x$(X): test_memcheck_bug2 $(*)
==$(N)==    by 0x$(X): main $(*)
==$(N)==  Address 0x$(X) is $(N) bytes after a block of size $(N) free'd
==$(N)==    at 0x$(X): test_memcheck_bug2 $(*)
==$(N)==    by 0x$(X): main $(*)
$(OPT)==$(N)==  Block was alloc'd at
$(OPT)==$(N)==    at 0x$(X): test_memcheck_bug2 $(*)
$(OPT)==$(N)==    by 0x$(X): main $(*)
==$(N)== 
==$(N)== 
==$(N)== HEAP SUMMARY:
==$(N)==     in use at exit: $(NC) bytes in $(N) blocks
==$(N)==   total heap usage: $(NC) allocs, $(NC) frees, $(NC) bytes allocated
==$(N)== 
$(OPT)==$(N)== All heap blocks were freed -- no leaks are possible
$(OPX)==$(N)== LEAK SUMMARY:
$(OPT)==$(N)==    definitely lost: 0 bytes in 0 blocks
$(OPT)==$(N)==    indirectly lost: 0 bytes in 0 blocks
$(OPT)==$(N)==      possibly lost: 0 bytes in 0 blocks
$(OPT)==$(N)==    still reachable: 0 bytes in 0 blocks
$(OPT)==$(N)==         suppressed: $(NC) bytes in $(N) blocks
==$(N)== 
==$(N)== For counts of detected and suppressed errors, rerun with: -v
==$(N)== Use --track-origins=yes to see where uninitialised values come from
==$(N)== ERROR SUMMARY: 10 errors from 10 contexts (suppressed: $(N) from $(N))
