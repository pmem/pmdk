bttdevice.arena.btt_map(0)=0x00000000
bttdevice.arena.btt_map(1)=0x00000001
bttdevice.arena.btt_map(2)=0x00000002
bttdevice.arena.btt_map(3)=0x00000003
bttdevice.arena.btt_map(4)=0x00000004
bttdevice.arena.btt_flog(0).seq=4
libpmempool_api/TEST12: START: libpmempool_test$(nW)
 ./libpmempool_test$(nW) -r 1 -t btt $(nW)
checking BTT Info headers
arena 0: BTT Info header checksum correct
checking BTT Map and Flog
arena 0: checking BTT Map and Flog
arena 0: invalid BTT Flog entry at 0
arena 0: unmapped block 40322
arena 0: number of unmapped blocks: 1
arena 0: number of invalid BTT Flog entries: 1
the following error can be fixed using PMEMPOOL_CHECK_ADVANCED flag
BTT Map and / or BTT Flog contain invalid entries
status = cannot repair
libpmempool_api/TEST12: DONE
libpmempool_api/TEST12: START: libpmempool_test$(nW)
 ./libpmempool_test$(nW) -r 1 -t btt -a 1 $(nW)
checking BTT Info headers
arena 0: BTT Info header checksum correct
checking BTT Map and Flog
arena 0: checking BTT Map and Flog
arena 0: invalid BTT Flog entry at 0
arena 0: unmapped block 40322
arena 0: number of unmapped blocks: 1
arena 0: number of invalid BTT Flog entries: 1
Do you want to repair invalid BTT Flog entries?
arena 0: repairing BTT Flog at 0 with free block entry 0x40009d82
status = repaired
libpmempool_api/TEST12: DONE
