#!/usr/bin/env bash
#
# Copyright 2015-2018, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# src/test/vmmalloc_fork/TEST1 -- unit test for libvmmalloc fork() support
#

# standard unit test setup
. ../unittest/unittest.sh

require_test_type medium

require_fs_type any
# there's no point in testing statically linked builds
require_build_type debug nondebug
require_no_asan

# This test uses pthread mutexes across fork, and recreates them in the child
# process.
configure_valgrind helgrind force-disable
configure_valgrind drd force-disable

setup

export VMMALLOC_POOL_SIZE=$((64 * 1024 * 1024))
export VMMALLOC_LOG_LEVEL=3
export VMMALLOC_FORK=1
export TEST_LD_PRELOAD=$VMMALLOC

# this test is leaky by design
export MEMCHECK_DONT_CHECK_LEAKS=1

expect_normal_exit ./vmmalloc_fork$EXESUFFIX c 4 2

check

pass
