#!/usr/bin/env bash
#
# Copyright 2016-2017, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# obj_rpmem_basic_integration/TEST8 -- rpmem replication from single local 8MB
#    part to two remote replicas one of which has two local replicas
#
# Replica can not have replica of its own so libpmemobj should return an error
# during attempt to open daisy chained poolset files.
#
export UNITTEST_NAME=obj_rpmem_basic_integration/TEST8
export UNITTEST_NUM=8

# standard unit test setup
. ../unittest/unittest.sh

require_test_type medium

setup

require_nodes 3

require_node_libfabric 0 $RPMEM_PROVIDER
require_node_libfabric 1 $RPMEM_PROVIDER
require_node_libfabric 2 $RPMEM_PROVIDER

init_rpmem_on_node 0 1 2

STDERR=stderr${UNITTEST_NUM}.log

# binary for this test
EXE=obj_basic_integration

# define files and directories
TEST_SET_LOCAL="testset_local"
TEST_SET_REMOTE="testset_remote"

TEST_FILE_LOCAL="testfile_local"
TEST_FILE_REMOTE="testfile_remote"

NODE_DIRS=($(get_node_dir 0) $(get_node_dir 1) $(get_node_dir 2))

# create and upload poolset files
create_poolset $DIR/$TEST_SET_LOCAL 16M:${NODE_DIRS[0]}/$TEST_FILE_LOCAL:x \
	m ${NODE_ADDR[1]}:${TEST_SET_REMOTE}1 \
	m ${NODE_ADDR[2]}:${TEST_SET_REMOTE}2
create_poolset $DIR/${TEST_SET_REMOTE}2 17M:${NODE_DIRS[2]}/${TEST_FILE_REMOTE}2:x
create_poolset $DIR/${TEST_SET_REMOTE}1 \
        18M:${NODE_DIRS[1]}/${TEST_FILE_REMOTE}1:x \
        r 20M:${NODE_DIRS[1]}/${TEST_FILE_REMOTE}1_replica:x

copy_files_to_node 0 . $DIR/$TEST_SET_LOCAL
copy_files_to_node 1 . $DIR/${TEST_SET_REMOTE}1
copy_files_to_node 2 . $DIR/${TEST_SET_REMOTE}2

rm_files_from_node 0 $TEST_FILE_LOCAL
rm_files_from_node 1 ${TEST_FILE_REMOTE}1 ${TEST_FILE_REMOTE}1_replica
rm_files_from_node 2 ${TEST_FILE_REMOTE}2

# execute test
expect_abnormal_exit run_on_node 0 ./$EXE$EXESUFFIX $TEST_SET_LOCAL 2>$STDERR

pass
