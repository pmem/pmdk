#!/usr/bin/env bash
#
# Copyright 2017, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# obj_rpmem_basic_integration/TEST19 -- minimal pool parts size
#
export UNITTEST_NAME=obj_rpmem_basic_integration/TEST19
export UNITTEST_NUM=19

# standard unit test setup
. ../unittest/unittest.sh

require_test_type medium

setup

require_nodes 2

require_node_libfabric 0 $RPMEM_PROVIDER
require_node_libfabric 1 $RPMEM_PROVIDER

init_rpmem_on_node 1 0

# binary for this test
EXE=obj_basic_integration

# define files and directories
TEST_SET_LOCAL="testset_local"
TEST_SET_REMOTE="testset_remote"

TEST_FILE_LOCAL="testfile_local"
TEST_FILE_REMOTE="testfile_remote"

POOLSET_LOCAL=
TEST_FILES_LOCAL=
POOLSET_REMOTE=
TEST_FILES_REMOTE=
for i in {0..8}; do
	POOLSET_LOCAL="$POOLSET_LOCAL 2M:${NODE_DIR[1]}${TEST_FILE_LOCAL}${i}:x"
	TEST_FILES_LOCAL="$TEST_FILES_LOCAL ${NODE_DIR[1]}${TEST_FILE_LOCAL}${i}"

	POOLSET_REMOTE="$POOLSET_REMOTE 2M:${NODE_DIR[0]}${TEST_FILE_REMOTE}${i}:x"
	TEST_FILES_REMOTE="$TEST_FILES_REMOTE ${NODE_DIR[0]}${TEST_FILE_REMOTE}${i}"
done
POOLSET_LOCAL="$POOLSET_LOCAL m ${NODE_ADDR[0]}:$TEST_SET_REMOTE"

# create and upload poolset files
create_poolset $DIR/$TEST_SET_LOCAL $POOLSET_LOCAL
create_poolset $DIR/$TEST_SET_REMOTE $POOLSET_REMOTE

copy_files_to_node 0 ${NODE_DIR[0]} $DIR/$TEST_SET_REMOTE
copy_files_to_node 1 ${NODE_DIR[1]} $DIR/$TEST_SET_LOCAL

rm_files_from_node 0 $TEST_FILES_REMOTE
rm_files_from_node 1 $TEST_FILES_LOCAL

# execute test
expect_normal_exit run_on_node 1 ./$EXE$EXESUFFIX ${NODE_DIR[1]}$TEST_SET_LOCAL

check

pass
