#!/usr/bin/env bash
#
# Copyright 2016-2017, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# src/test/obj_convert/TEST2 -- unit test for pool conversion
#
export UNITTEST_NAME=obj_convert/TEST2
export UNITTEST_NUM=2

# standard unit test setup
. ../unittest/unittest.sh

require_command gdb
require_test_type medium
require_fs_type any

setup

LOG=out${UNITTEST_NUM}.log
POOLSET=$DIR/pool.set
POOL1=$DIR/pool.part1
REPL1=$DIR/pool.rep.part1

rm -f $LOG

rm -f $POOLSET
create_poolset $POOLSET 32M:$POOL1:z\
	R 32M:$REPL1:z

check_file $POOLSET

expect_normal_exit $PMEMPOOL$EXESUFFIX create obj --layout pmempool $POOLSET

expect_abnormal_exit $PMEMPOOL$EXESUFFIX convert $POOL1 2>> $LOG > /dev/null
expect_abnormal_exit $PMEMPOOL$EXESUFFIX convert $REPL1 2>> $LOG > /dev/null
expect_abnormal_exit $PMEMPOOL$EXESUFFIX convert $POOLSET 2>> $LOG > /dev/null

check

pass
