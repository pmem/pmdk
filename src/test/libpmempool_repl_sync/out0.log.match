libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -w -s 16 -l OBJ_LAYOUT -d TestOK111 -o 0 $(nW)/pool0.set
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -w -s 16 -l OBJ_LAYOUT -d TestOK222 -o 20971520 $(nW)/pool0.set
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -w -s 16 -l OBJ_LAYOUT -d TestOK333 -o 41943040 $(nW)/pool0.set
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 0 $(nW)/pool0.set
TestOK111
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 20971520 $(nW)/pool0.set
TestOK222
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 41943040 $(nW)/pool0.set
TestOK333
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 0 $(nW)/pool0.set
Wrong1234
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 20971520 $(nW)/pool0.set
Wrong5678
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 41943040 $(nW)/pool0.set
Wrong9ABC
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync
 ./libpmempool_repl_sync$(nW) -s -g 1 -w 0 $(nW)/pool0.set
Result: 0

libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 0 $(nW)/pool0.set
TestOK111
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 20971520 $(nW)/pool0.set
TestOK222
libpmempool_replica_sync/TEST0: Done
libpmempool_replica_sync/TEST0: START: libpmempool_repl_sync_mod
 ./libpmempool_repl_sync_mod -l OBJ_LAYOUT -s 10 -o 41943040 $(nW)/pool0.set
TestOK333
libpmempool_replica_sync/TEST0: Done
POOL Header:
Signature                : PMEMOBJ [part file]
Major                    : $(N)
Mandatory features       : 0x0
Not mandatory features   : 0x0
Forced RO                : 0x0
Pool set UUID            : $(nW)
UUID                     : $(nW)
Previous part UUID       : $(nW)
Next part UUID           : $(nW)
Previous replica UUID    : $(nW)
Next replica UUID        : $(nW)
Creation Time            : $(*)
Alignment Descriptor     : $(XX) [OK]
Class                    : ELF64
Data                     : 2's complement, $(S)
Machine                  : $(*)
Checksum                 : $(XX) [OK]
POOL Header:
Signature                : PMEMOBJ [part file]
Major                    : $(N)
Mandatory features       : 0x0
Not mandatory features   : 0x0
Forced RO                : 0x0
Pool set UUID            : $(nW)
UUID                     : $(nW)
Previous part UUID       : $(nW)
Next part UUID           : $(nW)
Previous replica UUID    : $(nW)
Next replica UUID        : $(nW)
Creation Time            : $(*)
Alignment Descriptor     : $(XX) [OK]
Class                    : ELF64
Data                     : 2's complement, $(S)
Machine                  : $(*)
Checksum                 : $(XX) [OK]
POOL Header:
Signature                : PMEMOBJ [part file]
Major                    : $(N)
Mandatory features       : 0x0
Not mandatory features   : 0x0
Forced RO                : 0x0
Pool set UUID            : $(nW)
UUID                     : $(nW)
Previous part UUID       : $(nW)
Next part UUID           : $(nW)
Previous replica UUID    : $(nW)
Next replica UUID        : $(nW)
Creation Time            : $(*)
Alignment Descriptor     : $(XX) [OK]
Class                    : ELF64
Data                     : 2's complement, $(S)
Machine                  : $(*)
Checksum                 : $(XX) [OK]
POOL Header:
Signature                : PMEMOBJ [part file]
Major                    : $(N)
Mandatory features       : 0x0
Not mandatory features   : 0x0
Forced RO                : 0x0
Pool set UUID            : $(nW)
UUID                     : $(nW)
Previous part UUID       : $(nW)
Next part UUID           : $(nW)
Previous replica UUID    : $(nW)
Next replica UUID        : $(nW)
Creation Time            : $(*)
Alignment Descriptor     : $(XX) [OK]
Class                    : ELF64
Data                     : 2's complement, $(S)
Machine                  : $(*)
Checksum                 : $(XX) [OK]
POOL Header:
Signature                : PMEMOBJ [part file]
Major                    : $(N)
Mandatory features       : 0x0
Not mandatory features   : 0x0
Forced RO                : 0x0
Pool set UUID            : $(nW)
UUID                     : $(nW)
Previous part UUID       : $(nW)
Next part UUID           : $(nW)
Previous replica UUID    : $(nW)
Next replica UUID        : $(nW)
Creation Time            : $(*)
Alignment Descriptor     : $(XX) [OK]
Class                    : ELF64
Data                     : 2's complement, $(S)
Machine                  : $(*)
Checksum                 : $(XX) [OK]
