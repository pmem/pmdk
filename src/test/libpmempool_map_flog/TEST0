#!/bin/bash -e
#
# Copyright 2016, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# libpmempool_map_flog/TEST0 -- test for checking map and flog
#
export UNITTEST_NAME=libpmempool_map_flog/TEST0
export UNITTEST_NUM=0

. ../unittest/unittest.sh

require_fs_type any

setup

POOL=$DIR/file.pool
LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log
rm -f $LOG && touch $LOG
rm -f $LOG_TEMP && touch $LOG_TEMP
EXE=../libpmempool_api/libpmempool_test

declare -A map_err=(["Initial"]="0" ["Error"]="4"
	["Zeroed"]="8" ["Normal"]="C")

ent_val=2

for field in Zeroed Error Initial Normal;
do
	for((i=0;i<ent_val;i++));
	do
		spcmd="bttdevice.arena.btt_map(0)=0x${map_err["$field"]}000000${i}"

		expect_normal_exit $BTTCREATE $POOL
		echo ${field}: $spcmd >> $LOG_TEMP
		$PMEMSPOIL $POOL $spcmd

		expect_normal_exit $EXE$EXESUFFIX $POOL -r 1 -t btt -a 1
		cat $LOG >> $LOG_TEMP
		rm -f POOL
	done
done
mv $LOG_TEMP $LOG

check_file $POOL

check
pass
