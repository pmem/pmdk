#!/usr/bin/env bash
#
# Copyright 2017, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# pmempool_sync_remote/TEST7 -- a test for pmempool sync with a remote replica;
#                               a case with files larger than the pool;
#                               Ref: pmem/issue#498
#
export UNITTEST_NAME=pmempool_sync_remote/TEST7
export UNITTEST_NUM=7

# standard unit test setup
. ../unittest/unittest.sh

require_test_type	medium
require_fs_type		any

setup

. common.sh

# Create poolset files
create_poolset $DIR/pool.set \
	10M:$(get_node_dir 1)/pool.1:x \
	r \
	20M:$(get_node_dir 1)/pool.2:x \
        m ${NODE_ADDR[0]}:remote.set

create_poolset $DIR/remote.set \
	20M:$(get_node_dir 0)/pool.3:x

copy_files_to_node 0 . $DIR/remote.set
copy_files_to_node 1 . $DIR/pool.set

expect_normal_exit run_on_node 1 ../pmempool rm -sf pool.set
expect_normal_exit run_on_node 1 ../pmempool create obj pool.set
check_files_on_node 1 pool.set pool.1
check_files_on_node 0 remote.set

dump_info_log 1 0 pool.set before.0.log
dump_info_log 1 1 pool.set before.1.log
dump_info_log_remote 0 remote.set before.r.log

expect_normal_exit run_on_node 1 rm -f $(get_node_dir 1)/pool.1
expect_normal_exit run_on_node 1 rm -f $(get_node_dir 1)/pool.2
expect_normal_exit run_on_node 1 ../pmempool sync pool.set
dump_info_log 1 0 pool.set after.0.log
dump_info_log 1 1 pool.set after.1.log
dump_info_log_remote 0 remote.set after.r.log

diff_log 1 before.0.log after.0.log
diff_log 1 before.1.log after.1.log
diff_log 0 before.r.log after.r.log

pass
