#!/usr/bin/env bash
#
# Copyright 2017, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# pmempool_sync_remote/TEST15 -- a test for pmempool sync with the NOHDRS option
#                                and a remote replica;
#
# (like TEST11 but with different alignment)
# case: damaged remote device-dax-based master replica
# 1 local replica with 2 device daxes, mixed alignments
# 1 remote replica with 2 device daxes, mixed alignments
#
export UNITTEST_NAME=pmempool_sync_remote/TEST15
export UNITTEST_NUM=15

# standard unit test setup
. ../unittest/unittest.sh

require_test_type	medium
require_fs_type		any

. common.sh

require_node_dax_device 0 2
require_node_dax_device 1 2

require_node_dax_device_alignments 0 $SIZE_4KB $SIZE_2MB
require_node_dax_device_alignments 1 $SIZE_2MB $SIZE_4KB

setup

node_dax_device_zero 0
node_dax_device_zero 1

# Create poolset files
create_poolset $DIR/pool.set \
	O NOHDRS \
	AUTO:$(get_node_devdax_path 1 0) \
	AUTO:$(get_node_devdax_path 1 1) \
        m \
	${NODE_ADDR[0]}:remote.set

create_poolset $DIR/remote.set \
	O NOHDRS \
	AUTO:$(get_node_devdax_path 0 0) \
	AUTO:$(get_node_devdax_path 0 1)

OFFSET=$(get_node_devdax_size 1 0)
ROOT_SIZE=$[OFFSET + 1024]

# CLI script for writing some data hitting all the parts
WRITE_SCRIPT=write_data
cat << EOF > $DIR/$WRITE_SCRIPT
pmemobj_root $ROOT_SIZE
str_root_copy 0 TestOK111
str_root_copy $OFFSET TestOK222
EOF

# CLI script for reading 9 characters from all the parts
READ_SCRIPT=read_data
cat << EOF > $DIR/$READ_SCRIPT
str_root_print 0 9
str_root_print $OFFSET 9
EOF

copy_files_to_node 1 ${NODE_DIR[1]} $DIR/pool.set
copy_files_to_node 0 ${NODE_DIR[0]} $DIR/remote.set
copy_files_to_node 1 ${NODE_DIR[1]} $DIR/$WRITE_SCRIPT
copy_files_to_node 1 ${NODE_DIR[1]} $DIR/$READ_SCRIPT

expect_normal_exit run_on_node 1 ../pmempool rm -sf ${NODE_DIR[1]}pool.set
expect_normal_exit run_on_node 1 ../pmempool create obj ${NODE_DIR[1]}pool.set
check_files_on_node 1 pool.set $WRITE_SCRIPT $READ_SCRIPT
check_files_on_node 0 remote.set
exec_pmemobjcli_script 1 ${NODE_DIR[1]}$WRITE_SCRIPT ${NODE_DIR[1]}pool.set /dev/null
exec_pmemobjcli_script 1 ${NODE_DIR[1]}$READ_SCRIPT ${NODE_DIR[1]}pool.set before.data.log
dump_info_log 1 0 ${NODE_DIR[1]}pool.set before.1.log
dump_info_log_remote 0 ${NODE_DIR[0]}remote.set before.r.log

expect_normal_exit run_on_node 0 ../pmempool rm -f $(get_node_devdax_path 0 0)
expect_normal_exit run_on_node 0 ../pmempool rm -f $(get_node_devdax_path 0 1)
expect_normal_exit run_on_node 1 ../pmempool sync ${NODE_DIR[1]}pool.set

exec_pmemobjcli_script 1 ${NODE_DIR[1]}$READ_SCRIPT ${NODE_DIR[1]}pool.set after.data.log
dump_info_log 1 0 ${NODE_DIR[1]}pool.set after.1.log
dump_info_log_remote 0 ${NODE_DIR[0]}remote.set after.r.log

diff_log 1 before.1.log after.1.log
diff_log 0 before.r.log after.r.log
diff_log 1 before.data.log after.data.log

pass
