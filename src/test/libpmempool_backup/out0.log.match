libpmempool_backup$(nW)TEST0: START: libpmempool_test$(nW)
 $(nW)libpmempool_test$(nW) -b $(nW)pool.set_backup -t blk -r 1 $(nW)pool.set
creating backup file: $(nW)pool.part1_backup
creating backup file: $(nW)pool.part2_backup
creating backup file: $(nW)pool.part3_backup
creating backup file: $(nW)pool.part4_backup
replica 0 part 0: checking pool header
replica 0 part 0: pool header correct
replica 0 part 1: checking pool header
replica 0 part 1: pool header correct
replica 0 part 2: checking pool header
replica 0 part 2: pool header correct
replica 0 part 3: checking pool header
replica 0 part 3: pool header correct
checking pmemblk header
pmemblk header correct
checking BTT Info headers
arena 0: BTT Info header checksum correct
checking BTT Map and Flog
arena 0: checking BTT Map and Flog
status = consistent
libpmempool_backup$(nW)TEST0: DONE
libpmempool_backup$(nW)TEST0: START: libpmempool_test$(nW)
 $(nW)libpmempool_test$(nW) -b $(nW)pool.set_backup -t log -r 1 $(nW)pool.set
creating backup file: $(nW)pool.part1_backup
creating backup file: $(nW)pool.part2_backup
creating backup file: $(nW)pool.part3_backup
creating backup file: $(nW)pool.part4_backup
replica 0 part 0: checking pool header
replica 0 part 0: pool header correct
replica 0 part 1: checking pool header
replica 0 part 1: pool header correct
replica 0 part 2: checking pool header
replica 0 part 2: pool header correct
replica 0 part 3: checking pool header
replica 0 part 3: pool header correct
checking pmemlog header
pmemlog header correct
status = consistent
libpmempool_backup$(nW)TEST0: DONE
libpmempool_backup$(nW)TEST0: START: libpmempool_test$(nW)
 $(nW)libpmempool_test$(nW) -b $(nW)pool.set_backup -t obj -r 1 $(nW)pool.set
creating backup file: $(nW)pool.part1_backup
creating backup file: $(nW)pool.part2_backup
creating backup file: $(nW)pool.part3_backup
creating backup file: $(nW)pool.part4_backup
replica 0 part 0: checking pool header
replica 0 part 0: pool header correct
replica 0 part 1: checking pool header
replica 0 part 1: pool header correct
replica 0 part 2: checking pool header
replica 0 part 2: pool header correct
replica 0 part 3: checking pool header
replica 0 part 3: pool header correct
status = consistent
libpmempool_backup$(nW)TEST0: DONE
