Linux NVM Library

This is benchmarks/log_mt/README.

This directory contains a multi-threaded benchmark that measures
a performance of read and write operations for the PMEMLOG mode
but not only. If needed, it can do the same for standard file I/O
operations being performed on a file opened in the append mode.

usage: log_mt [-i] [-s value] [-v size] [-e size]
    THREADS_COUNT OPS_COUNT FILE_NAME

    Where <FILE_NAME> should be a file on a Persistent Memory
    aware file system. For standard file I/O operations this is
    not required.

    The -v and -e flags control the size of a data chunk that is
    used during writing and reading. By default, vector size is 1
    and a default element size is 512 bytes.

    <OPS_COUNT> tells the program how many read and write operations
    should be performed. However, it is worth noting here that there
    is a significant difference between a single read and write
    operation from a user's perspective and what is done internally
    by the program. Writing means adding a vector of a few elements,
    while a single read means getting all the data at once, vector by
    vector. Such approach results directly from the PMEMLOG mode
    implementation where a given log pool can only be read as a whole.

    By providing the <THREADS_COUNT> user can specify how many threads
    shall be run to do a given job.

    The -i flag turns off the use of PMEM library. If used, benchmark
    will do a performance testing of the standard file I/O interface.

    The -s flag, if given, enables non-deterministic behavior where
    the vector and element size can take a random value in range
    between 1 and the one provided by user.

There is a RUN.sh script that executes log_mt program in both available
'modes', with and without the use of PMEM library, each time with a
different number of threads. It first benchmarks the PMEMLOG APIs, then
measures the performance of the file I/O accesses and finally shows the
collected results on two separate graphs: one for write and one for read
operations.

output format:
    total write time;write operations per second;
    total read time;read operations per second;

Please, see the top-level README file for instructions on how to
build the libpmem library.
