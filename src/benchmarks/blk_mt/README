Linux NVM Library

This is benchmarks/blk_mt/README.

This directory contains a multi-threaded benchmark that measures
the performance of read and write operations for the PMEMBLK mode.
In order to properly perform the PMEMBLK benchmark, it must be fed
a pregenerated, fully written file in PMEMBLK mode. To generate the
file use the -c option.
If needed, standard file I/O operations may also be benchmarked.
The file is divided into segments, so that each thread has its own.
Each operation performs a full block read/write.

Usage: blk_mt [-b size] [-c] [-o count] [-s size] [-i]
	THREAD_COUNT FILE_PATH

    The -b option controls the size of the data chunk that is
    used during writing and reading. By default the block size
    is 512 bytes. The minimum value is also 512 bytes.

    The -c option prepares a fully written file to be used in
    PMEMBLK mode tests. This can be a lengthy process and it
    is advised to create these files on a very fast memory
    device, for example RAM. When this option is chosen, no tests
    are performed.

    The -o option sets the number of read or write operations
    performed by each thread. The default value is 100 and the
    minimum value is 50. Each operation writes or reads a whole
    block of data. The block to be read or written is chosen
    randomly.

    The -s option sets the size of the file provided by FILE_PATH.
    The minimum and default value is 2048MB. The provided parameter
    value is in MB. Please take note, that the file shall created
    if it does not exist. If the specified file exists, its
    contents shall be lost.

    The -i flag turns off the use of PMEM library. If used, the
    benchmark will do a performance test of the standard file
    I/O interface.

    By providing the <THREAD_COUNT>, the user can specify how many
    threads shall be run to perform the benchmark. There is no
    maximum value specified.

    Where <FILE_PATH> should be a file on a Persistent Memory
    aware file system. For standard file I/O operations this is
    not required.

There is a RUN.sh script that executes the blk_mt program in both
available 'modes', with and without the use of the PMEM library,
each time with a different number of threads. It first benchmarks
the PMEMLOG APIs, then measures the performance of the file I/O
accesses and finally shows the collected results on two separate
graphs: one for write and one for read operations.

Output format:
    total write time;write operations per second;
    total read time;read operations per second;

Please, see the top-level README file for instructions on how to
build the libpmem library.
